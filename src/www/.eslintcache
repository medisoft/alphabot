[{"/home/mario/IdeaProjects/AlphaBot/src/www/src/index.js":"1","/home/mario/IdeaProjects/AlphaBot/src/www/src/App.js":"2","/home/mario/IdeaProjects/AlphaBot/src/www/src/reportWebVitals.js":"3"},{"size":542,"mtime":1609805887098,"results":"4","hashOfConfig":"5"},{"size":7552,"mtime":1609956125658,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609801214402,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1bkatfv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/mario/IdeaProjects/AlphaBot/src/www/src/index.js",[],["17","18"],"/home/mario/IdeaProjects/AlphaBot/src/www/src/App.js",["19"],"import React, { useState } from 'react';\nimport './App.css';\nimport * as axios from 'axios';\nimport { Button, Grid } from 'semantic-ui-react'\n\nfunction App() {\n  const [hombroPata1, setHombroPata1] = useState(0)\n  const handleClick = (pata, motor, direccion) => {\n    axios.get(`http://192.168.7.64:3000/move?pata=${pata}&motor=${motor}&direccion=${direccion}`)\n      .then(data => {\n        console.log(data)\n        //setHombroPata1(data.data.posicion)\n      })\n  }\n\n  const setpos = (pata, motor, posicion) => {\n    return axios.get(`http://192.168.7.64:3000/move?pata=${pata}&motor=${motor}&posicion=${posicion}`)\n      .then(data => {\n        console.log(data)\n        //setHombroPata1(data.data.posicion)\n      })\n  }\n\n  const off = () => {\n    axios.get(`http://192.168.7.64:3000/off`);\n  }\n\n  const home = () => {\n    axios.get(`http://192.168.7.64:3000/home`);\n  }\n  const pausa = async (tout) => new Promise(resolve => setTimeout(() => resolve(), tout));\n\n  const stepup = async () => {\n    setpos(1, 'brazo', 1);\n    setpos(2, 'brazo', 1);\n    setpos(3, 'brazo', 1);\n    setpos(4, 'brazo', 1);\n    await pausa(1000);\n    setpos(1, 'hombro', 0.25);\n    setpos(2, 'hombro', 0.75);\n    setpos(3, 'hombro', 0.75);\n    setpos(4, 'hombro', 0.25);\n    await pausa(1000);\n    setpos(1, 'antebrazo', 0);\n    setpos(2, 'antebrazo', 0);\n    setpos(3, 'antebrazo', 0);\n    setpos(4, 'antebrazo', 0);\n    await pausa(1000);\n\n\n    setpos(1, 'brazo', 0.75);\n    setpos(2, 'brazo', 0.75);\n    setpos(3, 'brazo', 0.75);\n    setpos(4, 'brazo', 0.75);\n    await pausa(1000);\n\n\n\n//    setpos(1, 'hombro', 0.5);\n//    setpos(2, 'hombro', 0.5);\n//    setpos(3, 'hombro', 0.5);\n//    setpos(4, 'hombro', 0.5);\n//    await pausa(1000);\n\n//    setpos(1, 'brazo', 0.65);\n//    setpos(2, 'brazo', 0.65);\n//    await pausa(1000);\n//    setpos(3, 'brazo', 0.65);\n//    setpos(4, 'brazo', 0.65);\n//    await pausa(1000);\n\n    /*    setpos(2, 'brazo', 0.5);\n        setpos(2, 'antebrazo', 1);\n        await pausa(1000);\n        setpos(2, 'brazo', 0);\n        setpos(1, 'brazo', 0.5);\n        await pausa(1000);\n        setpos(3, 'brazo', 0.5);\n        setpos(3, 'antebrazo', 1);\n        await pausa(1000);\n        setpos(3, 'brazo', 0);\n        setpos(4, 'brazo', 0.5);\n        await pausa(1000);\n    \n    \n        setpos(2, 'brazo', 0.5);\n        setpos(2, 'antebrazo', 0);\n        await pausa(2000);\n    \n        setpos(3, 'brazo', 0.5);\n        setpos(3, 'antebrazo', 0);\n        await pausa(1000);\n    */\n\n    //await pausa(5000);\n    //off();\n  }\n\n\n  const sitdown = async () => {\n    for(let p=0.5; p<0.8;p+=0.01) {\n      setpos(1, 'brazo', p);\n      setpos(2, 'brazo', p);\n      setpos(3, 'brazo', p);\n      setpos(4, 'brazo', p);\n      await pausa(500);\n    }\n    \n    // const p=0.8;\n    // setpos(1, 'brazo', p);\n    // setpos(2, 'brazo', p);\n    // setpos(3, 'brazo', p);\n    // setpos(4, 'brazo', p);\n\n    await pausa(2000);\n    off();\n  }\n\n\n  const center = async () => {\n    for(let p=1;p<=6;p++) {\n      setpos(p, 'hombro', 0.5);\n      setpos(p, 'brazo', 0.5);\n      setpos(p, 'antebrazo', 0.5);\n      await pausa(500);\n    }\n    off();\n  }\n\n  return (\n    <Grid columns={2} rows={2} divided={true}>\n\n      <Grid.Row>\n        <Button onClick={() => off()}>Poweroff all</Button>\n        <Button onClick={() => home()}>Home all</Button>\n        <Button onClick={() => stepup()}>Step Up</Button>\n        <Button onClick={() => sitdown()}>Sit Down</Button>\n        <Button onClick={() => center()}>Center and Off</Button>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          Pata 1\n          <Grid.Row>\n            <Grid.Column>Hombro {hombroPata1} </Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'hombro', 'l')}>Left</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'hombro', 'r')}>Right</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Brazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'brazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'brazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Antebrazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'antebrazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(1, 'antebrazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n        </Grid.Column>\n        <Grid.Column>\n          Pata 3\n          <Grid.Row>\n            <Grid.Column>Hombro</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'hombro', 'l')}>Left</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'hombro', 'r')}>Right</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Brazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'brazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'brazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Antebrazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'antebrazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(3, 'antebrazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>\n          Pata 2\n          <Grid.Row>\n            <Grid.Column>Hombro</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'hombro', 'l')}>Left</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'hombro', 'r')}>Right</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Brazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'brazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'brazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Antebrazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'antebrazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(2, 'antebrazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n        </Grid.Column>\n        <Grid.Column>\n          Pata 4\n          <Grid.Row>\n            <Grid.Column>Hombro</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'hombro', 'l')}>Left</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'hombro', 'r')}>Right</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Brazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'brazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'brazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>Antebrazo</Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'antebrazo', 'd')}>Down</Button></Grid.Column>\n            <Grid.Column><Button onClick={() => handleClick(4, 'antebrazo', 'u')}>Up</Button></Grid.Column>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default App;\n","/home/mario/IdeaProjects/AlphaBot/src/www/src/reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":7,"column":23,"nodeType":"28","messageId":"29","endLine":7,"endColumn":37},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'setHombroPata1' is assigned a value but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]