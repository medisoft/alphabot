[{"/home/mario/IdeaProjects/AlphaBot/src/www/src/index.js":"1","/home/mario/IdeaProjects/AlphaBot/src/www/src/App.js":"2","/home/mario/IdeaProjects/AlphaBot/src/www/src/reportWebVitals.js":"3"},{"size":547,"mtime":1609976852788,"results":"4","hashOfConfig":"5"},{"size":7555,"mtime":1609977594621,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609801214402,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1bkatfv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/mario/IdeaProjects/AlphaBot/src/www/src/index.js",[],["16","17"],"/home/mario/IdeaProjects/AlphaBot/src/www/src/App.js",["18","19","20"],"import React, { useState } from 'react';\nimport './App.css';\nimport * as axios from 'axios';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\n\nfunction App() {\n  const [hombroPata1, setHombroPata1] = useState(0)\n  const handleClick = (pata, motor, direccion) => {\n    axios.get(`http://192.168.7.64:3000/move?pata=${pata}&motor=${motor}&direccion=${direccion}`)\n      .then(data => {\n        console.log(data)\n        //setHombroPata1(data.data.posicion)\n      })\n  }\n\n  const shutdown = () => {\n    axios.get(`http://192.168.7.64:3000/shutdown`)\n      .then(data => {\n        console.log(data)\n        //setHombroPata1(data.data.posicion)\n      })\n  }\n\n  const setpos = (pata, motor, posicion) => {\n    return axios.get(`http://192.168.7.64:3000/move?pata=${pata}&motor=${motor}&posicion=${posicion}`)\n      .then(data => {\n        console.log(data)\n        //setHombroPata1(data.data.posicion)\n      })\n  }\n\n  const off = () => {\n    axios.get(`http://192.168.7.64:3000/off`);\n  }\n\n  const home = () => {\n    axios.get(`http://192.168.7.64:3000/home`);\n  }\n  const pausa = async (tout) => new Promise(resolve => setTimeout(() => resolve(), tout));\n\n  const stepup = async () => {\n    setpos(1, 'brazo', 1);\n    setpos(2, 'brazo', 1);\n    setpos(3, 'brazo', 1);\n    setpos(4, 'brazo', 1);\n    await pausa(1000);\n    setpos(1, 'hombro', 0.25);\n    setpos(2, 'hombro', 0.75);\n    setpos(3, 'hombro', 0.75);\n    setpos(4, 'hombro', 0.25);\n    await pausa(1000);\n    setpos(1, 'antebrazo', 0);\n    setpos(2, 'antebrazo', 0);\n    setpos(3, 'antebrazo', 0);\n    setpos(4, 'antebrazo', 0);\n    await pausa(1000);\n\n\n    setpos(1, 'brazo', 0.75);\n    setpos(2, 'brazo', 0.75);\n    setpos(3, 'brazo', 0.75);\n    setpos(4, 'brazo', 0.75);\n    await pausa(1000);\n\n\n//    setpos(1, 'hombro', 0.5);\n//    setpos(2, 'hombro', 0.5);\n//    setpos(3, 'hombro', 0.5);\n//    setpos(4, 'hombro', 0.5);\n//    await pausa(1000);\n\n//    setpos(1, 'brazo', 0.65);\n//    setpos(2, 'brazo', 0.65);\n//    await pausa(1000);\n//    setpos(3, 'brazo', 0.65);\n//    setpos(4, 'brazo', 0.65);\n//    await pausa(1000);\n\n    /*    setpos(2, 'brazo', 0.5);\n        setpos(2, 'antebrazo', 1);\n        await pausa(1000);\n        setpos(2, 'brazo', 0);\n        setpos(1, 'brazo', 0.5);\n        await pausa(1000);\n        setpos(3, 'brazo', 0.5);\n        setpos(3, 'antebrazo', 1);\n        await pausa(1000);\n        setpos(3, 'brazo', 0);\n        setpos(4, 'brazo', 0.5);\n        await pausa(1000);\n    \n    \n        setpos(2, 'brazo', 0.5);\n        setpos(2, 'antebrazo', 0);\n        await pausa(2000);\n    \n        setpos(3, 'brazo', 0.5);\n        setpos(3, 'antebrazo', 0);\n        await pausa(1000);\n    */\n\n    //await pausa(5000);\n    //off();\n  }\n\n\n  const sitdown = async () => {\n    for (let p = 0.5; p < 0.8; p += 0.01) {\n      setpos(1, 'brazo', p);\n      setpos(2, 'brazo', p);\n      setpos(3, 'brazo', p);\n      setpos(4, 'brazo', p);\n      await pausa(500);\n    }\n\n    // const p=0.8;\n    // setpos(1, 'brazo', p);\n    // setpos(2, 'brazo', p);\n    // setpos(3, 'brazo', p);\n    // setpos(4, 'brazo', p);\n\n    await pausa(2000);\n    off();\n  }\n\n\n  const center = async () => {\n    for (let p = 1; p <= 6; p++) {\n      setpos(p, 'hombro', 0.5);\n      setpos(p, 'brazo', 0.5);\n      setpos(p, 'antebrazo', 0.5);\n      await pausa(500);\n    }\n    off();\n  }\n\n  const cambia = async (value, pata, motor) => {\n    console.log(value, pata, motor);\n  }\n  return (\n    <Container columns={2} rows={2} divided={true}>\n      <Row>\n        <Button onClick={() => off()}>Poweroff all</Button>\n        <Button onClick={() => home()}>Home all</Button>\n        <Button onClick={() => stepup()}>Step Up</Button>\n        <Button onClick={() => sitdown()}>Sit Down</Button>\n        <Button onClick={() => center()}>Center and Off</Button>\n        <Button onClick={() => shutdown()}>Shutdown system</Button>\n      </Row>\n      <Row>\n        <Col>\n          Pata 1\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Hombro</Form.Label>\n                  <Form.Control type={'range'} min={0} max={100}\n                                onChange={e => setpos(1, 'hombro', Number(e.target.value) / 100)}/>\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Brazo</Form.Label>\n                  <Form.Control type={'range'} min={0} max={100}\n                                onChange={e => setpos(1, 'brazo', Number(e.target.value) / 100)}/>\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Antebrazo</Form.Label>\n                  <Form.Control type={'range'} min={0} max={100}\n                                onChange={e => setpos(1, 'antebrazo', Number(e.target.value) / 100)}/>\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          Pata 3\n          <Row>\n            <Col>Hombro</Col>\n            <Col><Button onClick={() => handleClick(3, 'hombro', 'l')}>Left</Button></Col>\n            <Col><Button onClick={() => handleClick(3, 'hombro', 'r')}>Right</Button></Col>\n          </Row>\n          <Row>\n            <Col>Brazo</Col>\n            <Col><Button onClick={() => handleClick(3, 'brazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(3, 'brazo', 'u')}>Up</Button></Col>\n          </Row>\n          <Row>\n            <Col>Antebrazo</Col>\n            <Col><Button onClick={() => handleClick(3, 'antebrazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(3, 'antebrazo', 'u')}>Up</Button></Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Pata 2\n          <Row>\n            <Col>Hombro</Col>\n            <Col><Button onClick={() => handleClick(2, 'hombro', 'l')}>Left</Button></Col>\n            <Col><Button onClick={() => handleClick(2, 'hombro', 'r')}>Right</Button></Col>\n          </Row>\n          <Row>\n            <Col>Brazo</Col>\n            <Col><Button onClick={() => handleClick(2, 'brazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(2, 'brazo', 'u')}>Up</Button></Col>\n          </Row>\n          <Row>\n            <Col>Antebrazo</Col>\n            <Col><Button onClick={() => handleClick(2, 'antebrazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(2, 'antebrazo', 'u')}>Up</Button></Col>\n          </Row>\n        </Col>\n        <Col>\n          Pata 4\n          <Row>\n            <Col>Hombro</Col>\n            <Col><Button onClick={() => handleClick(4, 'hombro', 'l')}>Left</Button></Col>\n            <Col><Button onClick={() => handleClick(4, 'hombro', 'r')}>Right</Button></Col>\n          </Row>\n          <Row>\n            <Col>Brazo</Col>\n            <Col><Button onClick={() => handleClick(4, 'brazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(4, 'brazo', 'u')}>Up</Button></Col>\n          </Row>\n          <Row>\n            <Col>Antebrazo</Col>\n            <Col><Button onClick={() => handleClick(4, 'antebrazo', 'd')}>Down</Button></Col>\n            <Col><Button onClick={() => handleClick(4, 'antebrazo', 'u')}>Up</Button></Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/mario/IdeaProjects/AlphaBot/src/www/src/reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":7,"column":10,"nodeType":"27","messageId":"28","endLine":7,"endColumn":21},{"ruleId":"25","severity":1,"message":"29","line":7,"column":23,"nodeType":"27","messageId":"28","endLine":7,"endColumn":37},{"ruleId":"25","severity":1,"message":"30","line":137,"column":9,"nodeType":"27","messageId":"28","endLine":137,"endColumn":15},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'hombroPata1' is assigned a value but never used.","Identifier","unusedVar","'setHombroPata1' is assigned a value but never used.","'cambia' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]